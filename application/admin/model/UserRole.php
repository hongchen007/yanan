<?php/** * Created by PhpStorm. * User: Administrator * Date: 2019/8/9 * Time: 13:42 */namespace app\admin\model;class UserRole extends BaseModel{    /**     * 添加用户角色     * @param $date     * @param $id     * @return \think\Collection     * @throws \Exception     */    public function addroleuser($date,$id)    {        $allroleid = explode(',',substr($date,0,strlen($date)-1));        $info = [];        foreach($allroleid as $k=>$v){            $info[] = [                'user_id' => $id,                'role_id' => $v,                'create_time'   => date('Y-m-d H:i:s', time()),                'update_time'   => date('Y-m-d H:i:s', time()),            ];        }        return $this->saveAll($info);    }    /**     * 删除符合条件的用户角色     * @param $where     * @return int     * @throws \think\Exception     * @throws \think\exception\PDOException     */    public function delall($where)    {        $info = $this->where($where)->delete();        return $info;    }    /**     * 根据用户id查找对应的角色id     * @param $id     * @return array     */    public function findall($id)    {        $info = $this->where('user_id', $id)->column('role_id');        return $info;    }    /**     * 添加用户角色     * @param $info     * @param $user_id     * @return \think\Collection     * @throws \Exception     */    public function addall($info,$user_id)    {        $date = [];        foreach($info as $k=>$v){            $date[] = [                'user_id' => $user_id,                'role_id' => $v,                'create_time' => date('Y-m-d H:i:s',time()),                'update_time' => date('Y-m-d H:i:s',time()),            ];        }        return $this->saveAll($date);    }    /**     * 删除用户角色     * @param $info     * @param $user_id     * @return int     * @throws \think\Exception     * @throws \think\exception\PDOException     */    public function alldel($info,$user_id)    {        $where['user_id'] = $user_id;        $where['role_id'] = ['in',implode(',', $info)];        return $this->where($where)->delete();    }}