<?php/** * Created by PhpStorm. * User: Administrator * Date: 2019/7/17 * Time: 17:37 */namespace app\admin\controller;use app\admin\model\UserRole as UserRoleModel;use app\admin\model\RoleAccess as RoleAccessModel;use app\admin\model\Access as AccessModel;use think\facade\Session;use think\facade\Request;use think\facade\Config;use think\Db;class Base extends \think\Controller{    //当前url    protected $routeUri = '';    //当前模块名称    protected $module = '';    //当前控制器名称    protected $controller = '';    //当前方法名称    protected $action = '';    //登录前后都不用验证的权限    protected $allowaccess = [        //登录页面        '/admin/login/index',        //忘记密码        '/admin/user/forget',        //退出页面        '/admin/login/loginout',        //错误页面        '/admin/errorpage/index',        //首页        '/admin/index/index',        '/admin/pics/index',        //修改密码        '/admin/user/editpasseord',        //项目介绍 => 产品管理 => 添加 (添加前需要先判断是否有分类)        '/admin/projecttype/findalltypes',        //系统管理 => 角色 => 添加角色（查找所有权限）        '/admin/role/findaccess',    ];    //登录前不用验证的权限    protected $frontallowaccess = [        //登录页面        '/admin/login/index',        //忘记密码        '/admin/user/forget',    ];    public function initialize()    {        // 当前路由信息        $this->getRouteinfo();        //网站配置信息        $this->getmetainfo();    }    /**     * 网站信息     * @throws \think\db\exception\DataNotFoundException     * @throws \think\db\exception\ModelNotFoundException     * @throws \think\exception\DbException     */    public function getmetainfo()    {        $metainfo = Db::table('kit_website')->find();        $this->assign('metainfo', $metainfo);    }    /**     * 解析当前路由参数 （分组名称、控制器名称、方法名）     */    protected function getRouteinfo()    {        // 模块名称        $this->module = strtolower(Request::module());        // 控制器名称        $this->controller = strtolower(Request::controller());        // 方法名称        $this->action = str_replace('_','',strtolower(Request::action()));        // 权限检测        $this->routeUri = '/' . $this->module . '/' . $this->controller . '/' . $this->action;        $this->checkaccess($this->routeUri);        //验证session        if(in_array($this->routeUri, $this->frontallowaccess)){            return true;        }else{            if(!Session::get('userinfo')){                $this->redirect('Login/index');            }else{                $sessioninfo = Session::get('userinfo');                Session::set('userinfo',$sessioninfo);            }        }    }    /**     * 权限检测     * @param $date     * @return bool     * @throws \think\db\exception\DataNotFoundException     * @throws \think\db\exception\ModelNotFoundException     * @throws \think\exception\DbException     */    public function checkaccess($date)    {        $userinfo = Session::get('userinfo');        if($userinfo['is_superme'] == 1 || in_array($date, $this->allowaccess)){            //超管啥都展示            return true;        }        //非超管判断有啥角色id        $userrolemodel = new UserRoleModel();        $userroleinfo  = $userrolemodel->findall($userinfo['id']);        //所有角色权限id的集合        $roleaccessmodel = new RoleAccessModel();        $roleaccessinfo = [];        foreach($userroleinfo as $k=>$v){            $roleaccessinfo = array_unique(array_merge($roleaccessinfo, $roleaccessmodel->findAccess($v)));        }        //根据权限id查找所有权限        $accessmodel = new AccessModel();        $accessinfo = $accessmodel->findcondition($roleaccessinfo);        //权限转成小写        foreach ($accessinfo as $k=>$v){            $accessinfo[$k] = str_replace('_','',strtolower($v));        }        //根据权限和导航栏目来筛选符合条件的栏目        if(in_array($date, $accessinfo)){            return true;        }        $this->redirect('Errorpage/index');    }    /**     * 获取post数据 (数组)     * @param $key     * @return mixed     */    protected function postData($key)    {        return $this->request->post($key . '/a');    }    /**     * 上传图片     * @return bool     */    public function upload()    {        // 获取表单上传文件 例如上传了001.jpg        $file = request()->file('file');        // 移动到框架应用根目录/uploads/ 目录下        $info = $file->move('./uploads');        if ($info) {            // 输出 20160820/42a79759f284b767dfcb2a0197904287.jpg            echo ajax('/uploads/' . $info->getSaveName());        } else {            return false;        }    }}