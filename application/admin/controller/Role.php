<?php/** * Created by PhpStorm. * User: Administrator * Date: 2019/8/1 * Time: 14:47 */namespace app\admin\controller;use app\admin\model\Role as RoleModel;use app\admin\model\Access as AccessModel;use app\admin\model\RoleAccess as RoleAccessModel;use app\admin\validate\Role as Rolevalidate;use think\Request;class Role extends Base{    //列表页    public function index(Request $request)    {        if ($request->isAjax()) {            try {                $model = new RoleModel();                $info = $model->index($request->param('limit'));                echo ajax($info, count($info), 'Success');            } catch (\Exception $exception) {                return $exception->getMessage();            }        }else{            return $this->fetch();        }    }    /**     * 添加角色     * @param Request $request     * @return array|int|mixed     */    public function add_img(Request $request)    {        $model = new RoleModel();        if ($request->isPost()) {            //取所有值 先验证            $arr = json_decode($request->param('data'), true);            //验证参数            $validate = new Rolevalidate();            if (!$validate->scene('add_img')->check($arr)) {                return ($validate->getError());            }            $info = $model->add_img($arr);            return $info;        }        //角色列表        $info = $model->index($request->param('limit'));        //加载页面，分配数据        $this->assign('info',$info);        return $this->fetch();    }    //删除    public function img_del(Request $request)    {        if (!$request->param('id')) {            //参数不存在修改失败            return 2;        }else{            $model = new RoleModel();            $info = $model->img_del($request->param('id'));            return $info;        }    }    //修改    public function update_edit(Request $request)    {        if ($request->isAjax()) {            //取所有值 先验证            $arr = json_decode($request->param('data'), true);            //验证参数            $validate = new Rolevalidate();            if (!$validate->scene('add_img')->check($arr)) {                return ($validate->getError());            }            $model = new RoleModel;            $limit = $request->param('limit');            $info = $model->updateedit($arr,$limit);            return $info;        }else{            $model = new RoleModel();            //角色信息            $info   = $model->getinfo($request->param('id'));            //所有角色            $role = $model->index($request->param('limit'));            //加载页面，分配数据            $this->assign('info', $info);            $this->assign('role', $role);            return $this->fetch();        }    }    /**     * 所有权限     * @return mixed     */    public function findaccess(Request $request)    {        $allaccess = (new AccessModel())->findall();        $info = [];        foreach($allaccess as $k=>$v){            $info[$k]['id']   = $v['id'];            $info[$k]['name'] = $v['access_name'];            $info[$k]['pid']  = $v['access_parent_id'];        }        $res['data']['list'] = $info;        return $res;    }    /**     *权限修改     * @param Request $request     * @return mixed     * @throws \think\db\exception\DataNotFoundException     * @throws \think\db\exception\ModelNotFoundException     * @throws \think\exception\DbException     */    public function update_findaccess(Request $request)    {        //角色信息        $data = json_decode($request->param('data'),true);        //角色拥有权限        $access = (new RoleAccessModel())->findAccess($data['id']);        //所有权限        $allaccess = (new AccessModel())->findall();        $info = [];        foreach($allaccess as $k=>$v){            $info[$k]['id']   = $v['id'];            $info[$k]['name'] = $v['access_name'];            $info[$k]['pid']  = $v['access_parent_id'];        }        $res['data']['list'] = $info;        $res['data']['checkedId'] = $access;        $res['data']['disabledId'] = [];        return $res;    }}