<?php/** * Created by PhpStorm. * User: Administrator * Date: 2019/7/18 * Time: 9:26 */namespace app\admin\controller;use app\admin\model\User as UserModel;use app\admin\model\Role as RoleModel;use app\admin\model\UserRole as UserRoleModel;use app\admin\model\Code as CodeModel;use app\admin\model\Qqemail as QqemailModel;use app\admin\validate\User as UserValidate;use think\Request;use think\captcha\Captcha;class User extends Base{    //列表页显示    public function index(Request $request)    {        if ($request->isAjax()) {            try {                $data=[];                if ($request->param('user_name')) {                    $user_name = trim($request->param('user_name'));                    $data[] = ['user_name', 'like', "%$user_name%"];                }                if ($request->param('user_email')) {                    $user_email = trim($request->param('user_email'));                    $data[] = ['user_email', 'like', "%$user_email%"];                }                if ($request->param('user_phone')) {                    $user_phone = trim($request->param('user_phone'));                    $data[] = ['user_phone', 'like', "%$user_phone%"];                }                if ($request->param('user_sex')) {                    $data[] = ['user_sex', '=', $request->param('user_sex')];                }                $model = new UserModel();                $limit = $request->param('limit');                $info = $model->index($data,$limit);                echo ajax($info->toArray()['data'], $info->toArray()['total'], 'Success');            } catch (\Exception $exception) {                return $exception->getMessage();            }        }else{            return $this->fetch();        }    }    //添加    public function add_img(Request $request)    {        if ($request->isPost()) {            //取所有值 先验证            $arr = json_decode($request->param('data'), true);            unset($arr['role_id']);            //验证参数            $validate = new UserValidate();            if (!$validate->scene('add_img')->check($arr)) {                return ($validate->getError());            }            $model = new UserModel();            $info = $model->add_img($arr);            return $info;        }        $rolemodel = new RoleModel();        $info = $rolemodel->index($request->param('limit'));        $this->assign('info',$info);        return $this->fetch();    }    //删除    public function img_del(Request $request)    {        if (!$request->param('id')) {            //参数不存在修改失败            return 2;        }else{            $model = new UserModel();            $info = $model->img_del($request->param('id'));            return $info;        }    }    //修改    public function update_edit(Request $request)    {        $model = new UserModel();        $arr = $model->updateinfo($request->param('id'));        //所属角色        $roleall = (new UserRoleModel)->findall($request->param('id'));        //所有角色        $allrole = (new RoleModel)->index($request->param('limit'));        $this->assign('arr', $arr);        $this->assign('allrole', $allrole);        $this->assign('roleall', $roleall);        if ($request->isAjax()) {            //取所有值 先验证            $info = json_decode($request->param('data'), true);            unset($info['role_name']);            $validate = new UserValidate();            if (!$validate->scene('edit')->check($info)) {                return ($validate->getError());            }            $model = new UserModel;            $info = $model->updateedit($info);            return $info;        }        return $this->fetch();    }    /**     * 修改密码     * @return int|mixed     */    public function editpasseord()    {        if ($this->request->isAjax()){            $date = $this->postData('login');            if(!preg_match("/^[a-zA-Z\d_]{6,}$/",$date['user_password'])){                return 2; //密码格式不对            }else{                $model = new UserModel();                $info = $model->editpasseord($date);                if ($info) {                    return 1; //添加成功                } else {                    return 11; //添加失败                }            }        }        $this->assign('title','修改密码');        return $this->fetch('user/editpasseord');    }    /**     * 验证码     * @return \think\Response     */    public function verify()    {        $captcha = new Captcha();        return $captcha->entry();    }    /**     * 注册用户     * @param Request $request     * @return bool|int|mixed     */    public function reg(Request $request)    {        if($request->isAjax()){            $date = $request->param('field');            $usermodel = new UserModel();            return ($usermodel->reg($date));        }        return $this->fetch();    }    /**     * 注册获取邮箱验证码     * @param Request $request     */    public function sendemail(Request $request)    {        //先判断邮箱是否已经被注册        $info = $request->param('email');        //验证参数        $usermodel = new UserModel();        if($usermodel->findemail($info)){            return 11; //该邮箱已经被注册        }        $this->semdemailall($info);    }    /**     * 执行发送邮箱验证码     * @param $info     */    public function semdemailall($info)    {        //获取邮箱配置        $qqemailmodel = new QqemailModel();        $qqemailinfo = $qqemailmodel->findinfo();        //发送邮件        $code = rand('10000','99999');        sendMail($info, '验证码', $code, $qqemailinfo['username'],$qqemailinfo['emailname'],$qqemailinfo['password'],$qqemailinfo['emailaddress']);        $codemodel = new CodeModel();        $codemodel->addcode($code,$info);    }    /**     * 忘记密码     * @param Request $request     * @return int|mixed     */    public function forget(Request $request)    {        if($request->isAjax()){            $date = $request->param('field');            //验证验证码            if(!captcha_check($date['code'])){                // 验证失败                return 11; //验证码不正确            };            $usermodel = new UserModel();            return ($usermodel->forget($date));        }        return $this->fetch();    }    /**     * 忘记密码 获取邮箱验证码     * @param Request $request     * @return int     * @throws \think\db\exception\DataNotFoundException     * @throws \think\db\exception\ModelNotFoundException     * @throws \think\exception\DbException     */    public function forgetsendemail(Request $request)    {        //先判断邮箱是否被注册        $info = $request->param('email');        //验证参数        $usermodel = new UserModel();        if(!$usermodel->findemail($info)){            return 11; //该邮箱不存在        }        $this->semdemailall($info);    }}